name: Trigger deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "environment - internal-dev, internal-test, internal-prod"
        required: true
      sha:
        description: "Target image sha (default to latest commit on branch)"
        required: false
      parallel-deploy:
        description: "Deploy in parallel? (true/false)"
        required: false
        default: "true"

env:
  TARGET_SHA: ${{ github.sha }}

jobs:
  print-inputs:
    name: Print workflow dispatch inputs
    runs-on: ubuntu-latest
    steps:
      - name: Echo inputs.
        run: |
          echo 'Ref: ${{ github.ref }}'
          echo 'Inputs: ${{ toJSON(github.event.inputs) }}'

  trigger-deploy:
    name: Trigger on ${{ matrix.environment.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment:
          [
            { name: internal-dev, environment: dev },
            { name: internal-test, environment: test },
            { name: internal-prod, environment: prod },
          ]
    steps:
      - name: set ref SHA
        if: github.event.inputs.sha
        run: echo "TARGET_SHA=${{ github.event.inputs.sha }}" >> $GITHUB_ENV

      - name: Trigger deployment to ${{ matrix.environment.name }}
        if: contains(github.event.inputs.environment,matrix.environment.name)
        run: |
          curl -X POST \
              ${{ github.event.repository.deployments_url }} \
              -H 'Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN  }}' \
              -H 'Content-Type: application/json' \
              -H 'cache-control: no-cache' \
              -d '{
                "ref": "${{github.sha}}",
                "required_context": [],
                "environment": "${{ matrix.environment.name }}",
                "auto_merge": false,
                "payload":{
                  "name": "${{ matrix.environment.name }}",
                  "environment": "${{ matrix.environment.environment }}",
                  "parallel-deploy": "${{ github.event.inputs.parallel-deploy }}",
                  "target-image": "${{ env.TARGET_SHA }}"
                }
              }'
